global
	log /dev/log    local0
	log /dev/log    local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	maxconn 30000
	tune.ssl.default-dh-param 2048
	stats socket /var/run/haproxy

	# Default ciphers to use on SSL-enabled listening sockets.
	ssl-default-bind-options <%= @ssl_default_bind_options %>
	ssl-default-bind-ciphers <%= @ssl_default_bind_ciphers %>

	# stateless acme-challenges
	lua-load /usr/lib/stateless_acme_challenge.lua
		
defaults
	log global
	mode http
	option dontlognull
	option redispatch
	retries 3
	timeout http-request 10s
	timeout queue 1m
	timeout connect 5000ms
	timeout client 50000ms
	timeout server 50000ms

frontend apachecluster
	bind <%= @apache_cluster_ip %>:80
	bind <%= @apache_cluster_ip %>:443 ssl crt /etc/haproxy/atomia_certificates/default.pem crt /etc/haproxy/atomia_certificates crt /var/lib/acme/haproxy
	option  http-server-close
	http-request add-header X-Proto https if { ssl_fc }

	acl acme_challenge path_beg /.well-known/acme-challenge/
        http-request use-service lua.stateless_acme_challenge if acme_challenge
	default_backend apache_servers

frontend iiscluster
	bind <%= @iis_cluster_ip %>:80
	bind <%= @iis_cluster_ip %>:443 ssl crt /etc/haproxy/atomia_certificates/default.pem crt /etc/haproxy/atomia_certificates crt /var/lib/acme/haproxy
	option  http-server-close
	http-request add-header X-Proto https if { ssl_fc }

	acl acme_challenge path_beg /.well-known/acme-challenge/
        http-request use-service lua.stateless_acme_challenge if acme_challenge
	default_backend iis_servers

frontend mailcluster
	mode tcp
	bind <%= @mail_cluster_ip %>:25
	bind <%= @mail_cluster_ip %>:110
	bind <%= @mail_cluster_ip %>:143
	bind <%= @mail_cluster_ip %>:587
	default_backend mail_servers

frontend webmailcluster
  bind <%= @mail_cluster_ip %>:80
  bind <%= @mail_cluster_ip %>:443 ssl crt /etc/haproxy/atomia_certificates/default.pem crt /etc/haproxy/atomia_certificates crt /var/lib/acme/haproxy
  option  http-server-close
  http-request add-header X-Proto https if { ssl_fc }

  acl acme_challenge path_beg /.well-known/acme-challenge/
  http-request use-service lua.stateless_acme_challenge if acme_challenge
  default_backend webmail_servers

frontend sshcluster
	mode tcp
	bind <%= @ssh_cluster_ip %>:22
	default_backend ssh_servers

frontend ftpcluster
	mode tcp
	bind <%= @ftp_cluster_ip %>:21
	default_backend ftp_servers

backend apache_servers
	balance roundrobin
<% @apache_cluster_nodes.split(",").each_with_index do |node, index| -%>
	server apache<%=index+1 %> <%= node %>:80 check

	acl acme_challenge path_beg /.well-known/acme-challenge/
        http-request use-service lua.stateless_acme_challenge if acme_challenge
<% end -%>

backend iis_servers
	balance roundrobin
<% @iis_cluster_nodes.split(",").each_with_index do |node, index| -%>
	server iis<%=index+1 %> <%= node %>:80 check
<% end -%>

backend mail_servers
	mode tcp
	balance roundrobin
<% @mail_cluster_nodes.split(",").each_with_index do |node, index| -%>
	server mail<%=index+1 %> <%= node %>
<% end -%>

backend webmail_servers
  balance roundrobin
<% @webmail_cluster_nodes.split(",").each_with_index do |node, index| -%>
	server webmail<%=index+1 %> <%= node %>:80 check

	acl acme_challenge path_beg /.well-known/acme-challenge/
	http-request use-service lua.stateless_acme_challenge if acme_challenge
<% end -%>


backend ssh_servers
  balance roundrobin
<% @ssh_cluster_nodes.split(",").each_with_index do |node, index| -%>
  server ssh<%=index+1 %> <%= node %>:22 check
<% end -%>

backend ftp_servers
	mode tcp
	option httpchk
	balance roundrobin
<% @ftp_cluster_nodes.split(",").each_with_index do |node, index| -%>
	server ftp<%=index+1 %> <%= node %> check port 9200
<% end -%>
