if [ `lsb_release -r | awk '{print $2}'` == '14.04' ]
then
	wget https://apt.puppetlabs.com/puppetlabs-release-trusty.deb
	sudo dpkg -i puppetlabs-release-trusty.deb
else
	printf "\nERROR: This server is intended to run on Ubuntu 14.04 only!\n"
	exit
fi
sudo apt-get update

apt-get install -y puppetmaster git apache2-utils curl rubygems-integration build-essential libmysqlclient-dev ruby-dev
echo "127.0.0.1 puppet" >> /etc/hosts

gem install hiera-mysql hiera-mysql-backend mysql mysql2
cd /etc/puppet

## Setup MYSQL and add hiera user and database
if [ -z ${HIERA_USER_PASSWORD+x} ]; then
HIERA_USER_PASSWORD=`date +%s | sha256sum | base64 | head -c 16 ; echo`
fi

mysql --defaults-file=/etc/mysql/debian.cnf -e "GRANT USAGE ON *.* TO 'hierauser'@'localhost'; DROP USER 'hierauser'@'localhost';"

mysql --defaults-file=/etc/mysql/debian.cnf -e "CREATE USER 'hierauser'@'localhost' IDENTIFIED BY '${HIERA_USER_PASSWORD}'; GRANT ALL PRIVILEGES ON hiera.* TO 'hierauser'@'localhost';FLUSH PRIVILEGES;"

mkdir -p /etc/puppet/atomia/service_files

echo "mod \"atomia\", :git =>\"git://github.com/atomia/puppet-atomia.git\", :ref => \"old\" " > /etc/puppet/Puppetfile

cd /etc/puppet

gem install librarian-puppet
HOME=/root librarian-puppet install

mkdir -p /etc/puppet/manifests/
echo "
node default {
        hiera_include('classes')
}
" > /etc/puppet/manifests/site.pp

echo "---
:backends:
  - yaml
  - mysql

:yaml:
  :datadir: /etc/puppet/hieradata

:mysql:
  :host: localhost
  :user: hierauser
  :pass: ${HIERA_USER_PASSWORD}
  :database: hiera

  :query: SELECT val FROM configuration WHERE var='%{key}'


:hierarchy:
  - \"%{::atomia_role_1}\"
  - \"%{::atomia_role_2}\"
  - \"%{::atomia_role_3}\"
  - \"%{::atomia_role_4}\"
  - \"%{::atomia_role_5}\"

:logger: console
" > /etc/puppet/hiera.yaml

echo "[atomiacerts]
        path /etc/puppet/atomiacerts
        allow *
[atomia]
        path /etc/puppet/atomia
        allow *" > /etc/puppet/fileserver.conf

echo "[main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=$vardir/lib/facter
parser = future

[master]
ssl_client_header = SSL_CLIENT_S_DN
ssl_client_verify_header = SSL_CLIENT_VERIFY
autosign = true
reports = store" > /etc/puppet/puppet.conf

cp /etc/puppet/modules/atomia/files/default_files/* /etc/puppet/atomia/service_files/
mv /etc/puppet/modules/atomia/examples/hieradata/ /etc/puppet/hieradata/

/etc/init.d/puppetmaster restart

echo "ALL DONE!"
